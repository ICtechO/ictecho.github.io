[{"title":"python把文件利用关键字分割为多个文件","date":"2020-02-23T08:29:38.000Z","path":"2020/python-slice-file-by-kework/","text":"今天在研究怎么把wordpress导出来的xml文件里面的文章分割出来，让每篇文章独立成为一个文件，然后发表于hexo。为什么选择用python,其热度就不说了，而且最近也在学习简单的文件处理。当然，这只是万里长征第一步，因为只是把和之间的内容取了出来，后面还要做进一步处理。 12345678910111213141516171819202122232425262728293031#!/usr/bin/env python#__*__ coding: utf-8 __*__import reimport linecache def fileParse(): inputfile = input('Input SourcFile:') ##输入源文件，如A.txt fp = open(inputfile, 'r',encoding=':utf-8') number =[] lineNumber = 0 keyword = input('Slice Keyword:') ##输入你要切分的关键字 outfilename = input('Outfilename:')##输出文件名，如out.txt则写out即可，后续输出的文件是out0.txt,out1.txt... for eachLine in fp: m = re.search(keyword, eachLine) ##查询关键字 if m is not None: number.append(lineNumber) #将关键字的行号记录在number中 lineNumber = lineNumber + 1 size = int(len(number)) for i in range(0,size-1): start = number[i] end = number[i+1] destLines = linecache.getlines(inputfile)[start+1:end-1] #将行号为start+1到end-1的文件内容截取出来 fp_w = open(outfilename + str(i)+'.txt','w',encoding='utf-8') #将截取出的内容保存在输出文件中 for key in destLines: fp_w.write(key.replace(u'\\xa0', u' ')) #解决UnicodeEncodeError: 'gbk' codec can't encode character '\\xa0' fp_w.close() if __name__ == \"__main__\": fileParse()","tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.ictech.xyz/tags/hexo/"},{"name":"python","slug":"python","permalink":"http://www.ictech.xyz/tags/python/"},{"name":"wordpress","slug":"wordpress","permalink":"http://www.ictech.xyz/tags/wordpress/"}]},{"title":"hexo next主题文章底部微信二维码移至边栏","date":"2020-02-22T13:02:07.000Z","path":"2020/next-wechat-icon-to-left/","text":"喜欢上折腾hexo了，看了好多主题，最终选了next, 主要是其官网看起来成熟，网上的攻略也多。看到 wechat的二维码是文章底部，太隐蔽了，所以就挪到边样。 初次尝试在post.swig找到下面这段剪切或注释。 12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include 'wechat-subscriber.swig' %&#125; &lt;/div&gt;&#123;% endif %&#125; 在sidebar.swig第37行后粘贴上面的 123456&lt;p class=\"site-author-name\" itemprop=\"name\"&gt;&#123;&#123; theme.author &#125;&#125;&lt;/p&gt;&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include 'wechat-subscriber.swig' %&#125; &lt;/div&gt;&#123;% endif %&#125; 为了减少空白可以把wechat-subscriber.swig中的marging:20px auto改为margin:0 auto; 新的问题发现在移动端，边栏不显示的时候这个也看不到了 最终方案最后发现直接把这段code贴到layout/_custom/header.swig里面就行了，但是要改一下include的路径 12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include '../_macro/wechat-subscriber.swig' %&#125; &lt;/div&gt;&#123;% endif %&#125;","tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.ictech.xyz/tags/hexo/"},{"name":"next","slug":"next","permalink":"http://www.ictech.xyz/tags/next/"}]},{"title":"hexo-theme-dadaozhijian","date":"2020-02-22T08:43:07.000Z","path":"2020/hexo-theme-dadaozhijian/","text":"","tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.ictech.xyz/tags/hexo/"}]},{"title":"怎么flatten一个GDS所有层次","date":"2020-02-21T16:50:37.000Z","path":"2020/calibre-flatten-gds-level/","text":"1234567\\# Before:\\# topcell -&gt; a -&gt; b -&gt; c -&gt; d\\# topcell -&gt; b -&gt; c -&gt; d\\# topcell -&gt; c -&gt; d \\# After:\\# topcell 下面的code保存为flatten.txt. 执行calibredrv flatten.txt 12345set lay [layout create \"abcd.gds\" -dt_expand \\-preservePaths -preserveTextAttributes]set topcell [$lay topcell]$lay flatten cell $topcell$lay gdsout out.gds","tags":[{"name":"calibre","slug":"calibre","permalink":"http://www.ictech.xyz/tags/calibre/"},{"name":"calibredrv","slug":"calibredrv","permalink":"http://www.ictech.xyz/tags/calibredrv/"},{"name":"flatten","slug":"flatten","permalink":"http://www.ictech.xyz/tags/flatten/"},{"name":"gds","slug":"gds","permalink":"http://www.ictech.xyz/tags/gds/"}]},{"title":"测量path长度及rectangle长宽","date":"2020-02-21T16:49:40.000Z","path":"2020/measure-path-length/","text":"这个skill脚本可以用来测量path的长度和rectangle的长宽。用法：复制代码保存为 measurelength.il, 在icfb的CIW窗口 1load &quot;measurelength.il&quot; 在layout界面选中要测量的path或rectangle, 按下 Ctrl+k 即可显示相关尺寸。 123456789101112131415161718192021222324252627282930313233343536373839&#x2F;*Synopsis : Path_Length()Version : 1.0aDescription : Measure Path &amp; Rectangle Length*&#x2F;procedure( Path_Length()prog( (winId cvId selObj shape points llx lly urx ury)winId &#x3D; hiGetCurrentWindow()cvId &#x3D; getEditRep(winId)selObj &#x3D; geGetSelSet(cvId)leClearAllRuler(cvId)foreach(shape selObjcase( shape~&gt;objType(&quot;rect&quot; || &quot;inst&quot;Box &#x3D; shape~&gt;bBoxllx &#x3D; car(car(Box))lly &#x3D; cadr(car(Box))urx &#x3D; car(cadr(Box))ury &#x3D; cadr(cadr(Box))points&#x3D; list((llx:(lly+ury)&#x2F;2)(urx:(lly+ury)&#x2F;2))leCreateRuler(cvId points)points&#x3D; list(((llx+urx)&#x2F;2:lly)((llx+urx)&#x2F;2:ury))leCreateRuler(cvId points))(&quot;path&quot;points &#x3D; shape~&gt;pathleCreateRuler(cvId points))(t hiDisplayAppDBox(?name &#39;JWPath_Length ?buttonLayout &#39;Close?dboxBanner &quot;Warning!!&quot; ?dboxText &quot;No Select Objet (rect&#x2F;cell&#x2F;path)&quot;)));case);foreach);prog);procedure","tags":[{"name":"skill","slug":"skill","permalink":"http://www.ictech.xyz/tags/skill/"}]},{"title":"skill编写的cadence打label增强程序","date":"2020-02-21T16:49:09.000Z","path":"2020/cadence-skill-multiple-label/","text":"How to Use: 1.Load file “spHiCreateMultiLabel.il” 2.Enter interactive procedure name “spHiCreateMultiLabel()” in CIW. 3.Select correct layer in your LSW. 4.An option form will be displayed. If not , press “F3”. 4.Fill data in those fields based on your requirment. 6.Click on your layout window to determine the origin of your labels. code: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Create Multiple Labels ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; &#x2F;*&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Important Notice:NA. &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;How to Use:1.Load file &quot;spHiCreateMultiLabel.il&quot;2.Enter interactive procedure name &quot;spHiCreateMultiLabel()&quot; in CIW.3.Select correct layer in your LSW.4.An option form will be displayed. If not , press &quot;F3&quot;.4.Fill data in those fields based on your requirment.6.Click on your layout window to determine the origin of your labels.&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Author:Spark Su;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Revision History:1.0 22-Oct-2006Initial2.0 04-Dec-20061. Delete TextLayer filed. Layer should be selected in LSW.2. Change local variable names. 3.0 09-May-20083. Add interactive procedure spHiCreateMultiLabel()4. Reduce global variables. &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Global User Defined Procedures in This Script: spHiCreateMultiLabel() spHiCreateMultiLabelPtsDone()-------------------------------------------------------------------------------------Invoked Shared Global User Defined Procedures:NA.-------------------------------------------------------------------------------------Global Variables:spHiCreateMultiLabelOptionForm&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;End of readme.&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;*&#x2F; procedure(spHiCreateMultiLabel();--------------------------------------------------------------------------------if(!boundp(&#39;spHiCreateMultiLabelOptionForm) thenhiCreateOptionsForm(&#39;spHiCreateMultiLabelOptionForm&quot;Create Label&quot;list(hiCreateStringField(?name &#39;spFieldTextMain?prompt &quot;Main Text&quot;)hiCreateIntField(?name &#39;spFieldNumStart?prompt &quot;From&quot;?value nil?defValue 0?range &#39;(0 32767))hiCreateIntField(?name &#39;spFieldNumEnd?prompt &quot;To&quot;?value nil?defValue 0?range &#39;(0 32767))hiCreateIntField(?name &#39;spFieldNumStep?prompt &quot;Step&quot;?value nil?defValue 1?range &#39;(-1024 1024))hiCreateFloatField(?name &#39;spFieldFontSize?prompt &quot;FontSize&quot;?value nil?defValue 0.5?range &#39;(0 255))hiCreateCyclicField(?name &#39;spFieldFontName?prompt &quot;FontName&quot;?defValue &quot;stick&quot;?choices list(&quot;stick&quot; &quot;roman&quot;))hiCreateCyclicField(?name &#39;spFieldDirection?prompt &quot;Direction&quot;?defValue &quot;Vertical&quot;?choices list(&quot;Vertical&quot; &quot;Horizontal&quot;))hiCreateCyclicField(?name &#39;Modeselect?prompt &quot;Mode&quot;?defValue &quot;Auto&quot;?choices list(&quot;Auto&quot; &quot;Manual&quot;))hiCreateFloatField(?name &#39;spFieldPitch?prompt &quot;Pitch&quot;?value nil?range &#39;(-1024 1024))hiCreateCyclicField(?name &#39;spFieldJustification?prompt &quot;Justification&quot;?defValue &quot;centerCenter&quot;?choices list(&quot;lowerLeft&quot; &quot;centerLeft&quot; &quot;upperLeft&quot; &quot;lowerCenter&quot; &quot;centerCenter&quot;&quot;upperCenter&quot; &quot;lowerRight&quot; &quot;centerRight&quot; &quot;upperRight&quot; ))hiCreateCyclicField(?name &#39;spFieldJoint?prompt &quot;Joint&quot;?choices list(&quot;&lt; &gt;&quot; &quot;[ ]&quot;))hiCreateCyclicField(?name &#39;spFieldRotation?prompt &quot;Rotation&quot;?choices list(&quot;0&quot; &quot;90&quot; &quot;180&quot; &quot;270&quot;)))nil));end if;-------------------------------------------------------------------------------- ;--------------------------------------------------------------------------------;enterPointif(enterPoint(?prompts list( &quot;Click to enter the first label location&quot;)?doneProc &quot;spHiCreateMultiLabelPtsDone&quot;?form spHiCreateMultiLabelOptionForm)then telse nil);end if);end procedure;--------------------------------------------------------------------------------;--------------------------------------------------------------------------------procedure(spHiCreateMultiLabelPtsDone(w done pts)let(( cv TextMain numstart numend loopstep directionPitch FontSize FontName Justification RotationLswEntryLayer loopstart loopend Joint x yJointLeft JointRight TextTmp xPitch yPitchptsLabel Text) if(done thencv&#x3D;deGetCellView()TextMain&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldTextMain-&gt;valuenumstart&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldNumStart-&gt;valuenumend&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldNumEnd-&gt;valueloopstep&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldNumStep-&gt;valuedirection&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldDirection-&gt;valueMode&#x3D;spHiCreateMultiLabelOptionForm-&gt;Modeselect-&gt;valuePitch&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldPitch-&gt;valueFontSize&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldFontSize-&gt;valueFontName&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldFontName-&gt;valueJustification&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldJustification-&gt;valueRotation&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldRotation-&gt;value LswEntryLayer&#x3D;leGetEntryLayer() loopstart&#x3D; numstartloopend&#x3D; (numend-numstart)&#x2F;loopstepJoint&#x3D;spHiCreateMultiLabelOptionForm-&gt;spFieldJoint-&gt;valuex&#x3D;car(car(pts))y&#x3D;car(cdr(car(pts))) JointLeft&#x3D;&quot;&quot;JointRight&#x3D;&quot;&quot;if( Joint&#x3D;&#x3D;&quot;&lt; &gt;&quot;thenJointLeft&#x3D;&quot;&lt;&quot;JointRight&#x3D;&quot;&gt;&quot;elseJointLeft&#x3D; &quot;[&quot;JointRight&#x3D; &quot;]&quot;);end if if( Mode&#x3D;&#x3D;&quot;Auto&quot;thenif( direction&#x3D;&#x3D;&quot;Vertical&quot;thenxPitch&#x3D;0yPitch&#x3D;PitchelsexPitch&#x3D;PitchyPitch&#x3D;0);end if for( i 0 loopendsprintf(TextTmp &quot;%d&quot; i*loopstep+loopstart)Text&#x3D;strcat( TextMain JointLeft TextTmp JointRight )ptsLabel&#x3D;list(x y)dbCreateLabel( cv LswEntryLayer ptsLabel Text Justification Rotation FontName FontSize)x&#x3D;x+xPitchy&#x3D;y+yPitch);end forelsefor( i 0 loopendsprintf(TextTmp &quot;%d&quot; i*loopstep+loopstart)Text&#x3D;strcat( TextMain JointLeft TextTmp JointRight )ptsLabel&#x3D;list(x y)dbCreateLabel( cv LswEntryLayer ptsLabel Text Justification Rotation FontName FontSize)xy&#x3D;enterPoint(;?doneProc &quot;PtDone&quot;)x&#x3D;xCoord(xy)y&#x3D;yCoord(xy));end for);end if);end if);end let);end procedurehiSetBindKey(&quot;Layout&quot; &quot;Ctrl&lt;Key&gt;l&quot; &quot;spHiCreateMultiLabel()&quot;)","tags":[{"name":"skill","slug":"skill","permalink":"http://www.ictech.xyz/tags/skill/"}]},{"title":"IC layout中计算Layer面积的skill","date":"2020-02-21T15:45:29.000Z","path":"2020/layer-area-calculate-skill/","text":"这个skill脚本可以用来计算layer的面积，包括Path、Rectange、Polygon。用法：复制代码保存为 layer_area.il,在icfb的CIW窗口 1load &quot;layer_area.il&quot; 在layout界面选中要测量的图形, 按下 Alt+a 即可弹出所选图形的面积 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899/*Synopsis : CL_Area()*/procedure(CL_Area()prog((cvId selObj area number shape Box points point1 point2 length width )cvId = getEditRep(hiGetCurrentWindow())selObj = geGetSelSet(cvId)number = length(selObj)if(zerop(number) thenCLMessage(\"Error!!\" 'Close \"Please select a layer.\" )return())geDeselectAll(hiGetCurrentWindow())foreach(shape selObjarea = 0case( shape~&gt;objType(\"rect\"Box = shape~&gt;bBoxarea = (car(cadr(Box)) - car(car(Box))) * (cadr(cadr(Box)) - cadr(car(Box))))(\"polygon\"number = length(shape~&gt;points)points = shape~&gt;pointspoints = append(points list(car(points)))while(!zerop(number)point1 = car(points)points = cdr(points)point2 = car(points)area = area + ( car(point1) * cadr(point2) )area = area - ( car(point2) * cadr(point1) )number--);whilearea = abs(area/2))(\"path\"number = shape~&gt;nPointspoints = shape~&gt;pathwidth = shape~&gt;widthwhile(!zerop(number-1)point1 = car(points)points = cdr(points)point2 = car(points)if(equal(car(point1) car(point2))length = abs(cadr(point1) - cadr(point2))length = abs( car(point1) - car(point2)));ifarea = area + length * widthnumber--);whilecase(shape~&gt;pathStyle(\"extendExtend\" area = area + width*width )(\"varExtendExtend\" area = area + (shape~&gt;beginExt+shape~&gt;endExt)*width )(\"roundRound\" area = area + 4/9.0 * width * width ) ;(w/3^2) * 4(t );truncateExtend);case)(tarea = 0.0));casegeSelectObject(shape)if(zerop(area) thenCLMessage(\"Error!!\" 'Close \"This is not a layer.\")sprintf(area \"Area = unknown\")elsesprintf(area \"Area = %f\" area))CLMessage(\"Layer Area\" 'Close area)geDeselectFig(shape));foreach);prog);procedure;-------------------------------------------------------procedure(CLMessage(title button message)prog( ()hiDisplayAppDBox(?name 'CLDBox?dboxBanner title?buttonLayout button?dboxText message));prog);procedurehiSetBindKey(\"Layout\" \"Alt&lt;Key&gt;a\" \"CL_Area()\")","tags":[{"name":"skill","slug":"skill","permalink":"http://www.ictech.xyz/tags/skill/"}]},{"title":"python-op-list","date":"2020-02-21T13:50:50.000Z","path":"2020/python-op-list/","text":"用for遍历整个列表12345678&gt;&gt;&gt; cells =['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; for cel in cells:... print(cel)...cellAcellBcellCcellD For循环中加入操作12345678&gt;&gt;&gt; cells =['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; for cel in cells:... print('cells list include ' + cel + '.')...cells list include cellA.cells list include cellB.cells list include cellC.cells list include cellD. For循环后加入操作 12345678910&gt;&gt;&gt; cells =['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; for cel in cells:... print('cells list include ' + cel + '.')...&gt;&gt;&gt; print('that is all cells')cells list include cellA.cells list include cellB.cells list include cellC.cells list include cellD.that is all cells For循环在某一范围”使用range()”12&gt;&gt;&gt; cells = ['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; for i in range(0,3): #实际中 0&lt;=i&lt;3 ... print(cells[i]) ... cellA cellB cellC range()函数可以指定步长 12345678&gt;&gt;&gt; cells = ['cellA', 'cellB', 'cellC', 'cellD','cellE','cellF','cellG']&gt;&gt;&gt; for i in range(0,7,2):... print(cells[i])...cellAcellCcellEcellG 使用range()创建数字列表123&gt;&gt;&gt; numbers = list(range(1,6))&gt;&gt;&gt; print(numbers)[1, 2, 3, 4, 5] range()函数可以指定步长 1234&gt;&gt;&gt; numbers = list(range(1,6,2))&gt;&gt;&gt; print(numbers)[1, 3, 5]&gt;&gt;&gt; 数字列表的简单计算123456789&gt;&gt;&gt; digitals = list(range(1,10))&gt;&gt;&gt; print(digitals)[1, 2, 3, 4, 5, 6, 7, 8, 9]&gt;&gt;&gt; min(digitals)1&gt;&gt;&gt; max(digitals)9&gt;&gt;&gt; sum(digitals)45 列表切片123456789&gt;&gt;&gt; cells = ['cellA', 'cellB', 'cellC', 'cellD','cellE','cellF','cellG']&gt;&gt;&gt; print(cells[0:4]) #第一个至第3个['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; print(cells[:4]) #第一个至第3个['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; print(cells[2:]) #第3个至最后一个['cellC', 'cellD', 'cellE', 'cellF', 'cellG']&gt;&gt;&gt; print(cells[-2:]) #倒数第2个至最后一个['cellF', 'cellG'] 遍历切片12345678&gt;&gt;&gt; cells = ['cellA', 'cellB', 'cellC', 'cellD','cellE','cellF','cellG']&gt;&gt;&gt; for cel in cells[:4]:... print(cel)...cellAcellBcellCcellD 复制列表1234&gt;&gt;&gt; cells = ['cellA', 'cellB', 'cellC', 'cellD','cellE','cellF','cellG']&gt;&gt;&gt; another = cells[:]&gt;&gt;&gt; print(another)['cellA', 'cellB', 'cellC', 'cellD', 'cellE', 'cellF', 'cellG'] 定义元组元组用圆括号表示，其元素不可更改，但可以重新定义，可以用索引访问。 12345&gt;&gt;&gt; dimenssions = (200, 300)&gt;&gt;&gt; print(dimensions[0])200&gt;&gt;&gt; print(dimensions[1])300 遍历元组123456&gt;&gt;&gt; dimensions = (200, 300)&gt;&gt;&gt; for dim in dimensions:... print(dim)...200300 修改元组变量123456&gt;&gt;&gt; dimensions = (200, 300)&gt;&gt;&gt; for dim in dimensions:... print(dim)...200300 重新定义元组123456&gt;&gt;&gt; dimensions = (400, 500)&gt;&gt;&gt; for dim in dimensions:... print(dim)...400500","tags":[{"name":"append","slug":"append","permalink":"http://www.ictech.xyz/tags/append/"},{"name":"del","slug":"del","permalink":"http://www.ictech.xyz/tags/del/"},{"name":"insert","slug":"insert","permalink":"http://www.ictech.xyz/tags/insert/"},{"name":"len","slug":"len","permalink":"http://www.ictech.xyz/tags/len/"},{"name":"pop","slug":"pop","permalink":"http://www.ictech.xyz/tags/pop/"},{"name":"python","slug":"python","permalink":"http://www.ictech.xyz/tags/python/"},{"name":"remove","slug":"remove","permalink":"http://www.ictech.xyz/tags/remove/"},{"name":"reverse","slug":"reverse","permalink":"http://www.ictech.xyz/tags/reverse/"},{"name":"sort","slug":"sort","permalink":"http://www.ictech.xyz/tags/sort/"},{"name":"sorted","slug":"sorted","permalink":"http://www.ictech.xyz/tags/sorted/"}]},{"title":"Python之列表基础","date":"2020-02-21T13:50:20.000Z","path":"2020/python-list/","text":"定义列表python中用中括号[]表示列表，列表元素用逗号（,）隔开 1234567&gt;&gt;&gt; cells = ['cellA','cellB','cellC']&gt;&gt;&gt; print(cells)['cellA', 'cellB', 'cellC']定义一个空的列表&gt;&gt;&gt; cells = []&gt;&gt;&gt; print(cells)[] 索引介绍及访问列表元素python列表中，索引是从0开始的，而不是1，所以第一个元素索引为0。 1234567891011&gt;&gt;&gt; cells = ['cellA','cellB','cellC']&gt;&gt;&gt; print(cells[0])cellA&gt;&gt;&gt; print(cells[1])cellB&gt;&gt;&gt; print(cells[2])cellC&gt;&gt;&gt; print(cells[-1]) #指定索引[-1]可以让python返回列表最后一个元素。cellC&gt;&gt;&gt; print(cells[-2]) #指定索引[-2]可以让python返回列表倒数第二个元素。cellB 修改列表元素123456&gt;&gt;&gt; cells = ['cellA','cellB','cellC']&gt;&gt;&gt; print(cells)['cellA', 'cellB', 'cellC']&gt;&gt;&gt; cells[0] = 'blockA'&gt;&gt;&gt; print(cells)['blockA', 'cellB', 'cellC'] 添加元素到列表”append”1234&gt;&gt;&gt; cells = ['cellA','cellB','cellC']&gt;&gt;&gt; cells.append('cellD')&gt;&gt;&gt; print(cells)['cellA', 'cellB', 'cellC', 'cellD'] 列表中插入元素”insert”1234&gt;&gt;&gt; cells = ['cellA','cellB','cellC']&gt;&gt;&gt; cells.insert(0,'cellX')&gt;&gt;&gt; print(cells)['cellX', 'cellA', 'cellB', 'cellC'] 删除列表中的元素”del”12345678&gt;&gt;&gt; cells = ['cellA','cellB','cellC']&gt;&gt;&gt; del cells[0]&gt;&gt;&gt; print(cells)['cellB', 'cellC']&gt;&gt;&gt; cells = ['cellA','cellB','cellC']&gt;&gt;&gt; del cells[-1]&gt;&gt;&gt; print(cells)['cellA', 'cellB'] 弹出列表中指定元素“pop()”123456&gt;&gt;&gt; cells = ['cellA','cellB','cellC']&gt;&gt;&gt; second_cell = cells.pop(1)&gt;&gt;&gt; print('The second cell is '+ second_cell + '.')The second cell is cellB.&gt;&gt;&gt; print(cells)['cellA', 'cellC'] #索引[1]被弹出后已自动从列表中删除 根据索引值删除列表中元素“remove()”1234&gt;&gt;&gt; cells = ['cellA','cellB','cellC','cellA']&gt;&gt;&gt; cells.remove('cellA')&gt;&gt;&gt; print(cells)['cellB', 'cellC', 'cellA'] #revome只会删除第一个指定的值 永久性排序列表“sort()”1234&gt;&gt;&gt; cells = ['cellB','cellD','cellC','cellA']&gt;&gt;&gt; cells.sort()&gt;&gt;&gt; print(cells)['cellA', 'cellB', 'cellC', 'cellD'] sort（reverse=True)可以反向排序1234&gt;&gt;&gt; cells = ['cellB','cellD','cellC','cellC']&gt;&gt;&gt; cells.sort(reverse=True)&gt;&gt;&gt; print(cells)['cellD', 'cellC', 'cellC', 'cellB'] 临时性排序列表”sorted()”sorted不会永久改变列表顺序，只是临时的 12345678910&gt;&gt;&gt; cells = ['cellB','cellD','cellC','cellA']&gt;&gt;&gt; print('original list is:');print(cells)original list is:['cellB', 'cellD', 'cellC', 'cellA']&gt;&gt;&gt; print('sorted list is:');print(sorted(cells))sorted list is:['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; print('original list is:');print(cells)original list is:['cellB', 'cellD', 'cellC', 'cellA'] 反转列表”reverse”123456&gt;&gt;&gt; cells =['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; print(cells)['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; cells.reverse()&gt;&gt;&gt; print(cells)['cellD', 'cellC', 'cellB', 'cellA'] 获取列表长度”len”123&gt;&gt;&gt; cells =['cellA', 'cellB', 'cellC', 'cellD']&gt;&gt;&gt; len(cells)4","tags":[{"name":"for","slug":"for","permalink":"http://www.ictech.xyz/tags/for/"},{"name":"range","slug":"range","permalink":"http://www.ictech.xyz/tags/range/"},{"name":"元组","slug":"元组","permalink":"http://www.ictech.xyz/tags/%E5%85%83%E7%BB%84/"}]},{"title":"python之字典","date":"2020-02-21T13:21:47.000Z","path":"2020/python-dict/","text":"字典的定义顾名思义，可以通过索引得到值。类似有很多不同的property，每个property对应各自的值。如： 12345&gt;&gt;&gt; cell = &#123;'name':'inv','type':'stdcell','length':'2um'&#125;&gt;&gt;&gt; **print**(cell['name'])inv&gt;&gt;&gt; **print**(cell['type'])stdcell 我们还可以调用字典类的构造函数dict(**kwargs)来定义一个字典，如： 1&gt;&gt;&gt; cell = **dict**(name='inv',type='stdcell',length='2um') 如何查字典可以用方括号或get()函数。 12&gt;&gt;&gt; **print**(cell['type']) ##方法1&gt;&gt;&gt; **print**(cell.**get**('type')) ##方法2 字典中的元素个数123&gt;&gt;&gt; cell = &#123;'name':'inv','type':'stdcell','length':'2um'&#125;&gt;&gt;&gt; **len**(cell)3 修改元素1234&gt;&gt;&gt; cell = &#123;'name':'inv','type':'stdcell','length':'2um'&#125;&gt;&gt;&gt; cell['length'] ='3um'&gt;&gt;&gt; **print**(cell)&#123;'name': 'inv', 'type': 'stdcell', 'length': '3um'&#125; 或者 12345&gt;&gt;&gt; cell_add = &#123;'name':'nand2','height':'2um'&#125;&gt;&gt;&gt; cell.**update**(cell_add)&gt;&gt;&gt; **print**(cell)&#123;'name': 'nand2', 'type': 'stdcell', 'length': '3um', 'height': '2um'&#125;#上面不仅可以更改name的值，还可以增加新键值。 删除元素12345678&gt;&gt;&gt; cell = &#123;'name': 'nand2', 'type': 'stdcell', 'length': '3um', 'height': '2um'&#125;&gt;&gt;&gt; cell.**pop**('height') '2um'&gt;&gt;&gt; **print**(cell)&#123;'name': 'nand2', 'type': 'stdcell', 'length': '3um'&#125;&gt;&gt;&gt; cell.**clear**() &gt;&gt;&gt; **print**(cell)&#123;&#125; 提取所有健或值123456&gt;&gt;&gt; cell = &#123;'name': 'inv', 'type': 'stdcell', 'length': '3um'&#125;&gt;&gt;&gt; cell.**keys**() **dict_keys**(['name', 'type', 'length'])&gt;&gt;&gt; cell.**values**()**dict_values**(['inv', 'stdcell', '3um'])&gt;&gt;&gt; 字典与列表的不同：| item | 字典 | 列表 || ——– | :——————————: | :—————————————————–: || 序列 | 无序，通过键来索引 | 有序，用位置来索引。支持序列操作，如slice || 可变长度 | 是 | 是 || 可修改 | 是 | 是 || 常用函数 | get,keys,values,pop,update,clear | count,extend,index,insert,pop,remove,reverse,sort,clear |","tags":[{"name":"pop","slug":"pop","permalink":"http://www.ictech.xyz/tags/pop/"},{"name":"python","slug":"python","permalink":"http://www.ictech.xyz/tags/python/"},{"name":"clear","slug":"clear","permalink":"http://www.ictech.xyz/tags/clear/"},{"name":"dictionary","slug":"dictionary","permalink":"http://www.ictech.xyz/tags/dictionary/"},{"name":"update","slug":"update","permalink":"http://www.ictech.xyz/tags/update/"},{"name":"字典","slug":"字典","permalink":"http://www.ictech.xyz/tags/%E5%AD%97%E5%85%B8/"}]},{"title":"Hexo布署到github和coding问题汇总","date":"2020-02-20T11:20:42.000Z","path":"2020/hexo-deployment-to-github-coding-problem/","text":"hexo d后 ERROR Deployer not found: git解决办法 1npm install --save hexo-deployer-git fatal: unable to auto-detect email address解决办法 12git config --global user.name \"your_name\"git config --global user.email \"your_email@qq.com\" github注册时Unable to verify your captcha response Unable to verify your captcha response. Please visit https://help.github.com/articles/troubleshooting-connectivity-problems/#troubleshooting-the-captcha for troubleshooting information 先说官方：Edge, chrome, firefox都试过了，没用的，而且都检查过更新了。网上说法：用水果手机自带浏览器，咱没有，用不果平板未成功 解决办法：最终下载了个最新的microsoft edge, 全新安装 如何让github自动生成二级域名注册github时一定要注意，如果你注册的是名是username, 那你的仓库名起名为username.github.io, 这样就可以了。","tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.ictech.xyz/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://www.ictech.xyz/tags/github/"},{"name":"coding","slug":"coding","permalink":"http://www.ictech.xyz/tags/coding/"}]},{"title":"Hello World test","date":"2020-02-19T06:46:31.462Z","path":"2020/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]